package com.example.hitchbot.Speech;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;

import com.example.hitchbot.Config;

import android.os.AsyncTask;
import android.widget.TextView;
import edu.cmu.pocketsphinx.Assets;
import edu.cmu.pocketsphinx.Hypothesis;
import edu.cmu.pocketsphinx.RecognitionListener;
import edu.cmu.pocketsphinx.SpeechRecognizer;

public class SpeechIn implements RecognitionListener {

	private static final String KWS_SEARCH = "wakeup";
    private static final String FORECAST_SEARCH = "forecast";
    private static final String DIGITS_SEARCH = "digits";
    private static final String MENU_SEARCH = "menu";
    private static final String KEYPHRASE = "oh mighty computer";

    private SpeechRecognizer recognizer;
    private HashMap<String, Integer> captions;
	
	public SpeechIn()
	{
		initRecognizer();
	}
	
	private void initRecognizer()
	{
		
		// Prepare the data for UI
        captions = new HashMap<String, Integer>();
        captions.put(KWS_SEARCH, R.string.kws_caption);
        captions.put(MENU_SEARCH, R.string.menu_caption);
        captions.put(DIGITS_SEARCH, R.string.digits_caption);
        captions.put(FORECAST_SEARCH, R.string.forecast_caption);
        setContentView(R.layout.main);
        ((TextView) findViewById(R.id.caption_text))
                .setText("Preparing the recognizer");
		
        new AsyncTask<Void, Void, Exception>() {
            @Override
            protected Exception doInBackground(Void... params) {
                try {
                    Assets assets = new Assets(Config.context);
                    File assetDir = assets.syncAssets();
                    setupRecognizer(assetDir);
                } catch (IOException e) {
                    return e;
                }
                return null;
            }

            @Override
            protected void onPostExecute(Exception result) {
                if (result != null) {
                    ((TextView) findViewById(R.id.caption_text))
                            .setText("Failed to init recognizer " + result);
                } else {
                    switchSearch(KWS_SEARCH);
                }
            }
        }.execute();
	}
	
	   private void setupRecognizer(File assetsDir) {
	        File modelsDir = new File(assetsDir, "models");
	        recognizer = Config.context.defaultSetup()
	                .setAcousticModel(new File(modelsDir, "hmm/en-us-semi"))
	                .setDictionary(new File(modelsDir, "dict/cmu07a.dic"))
	                .setRawLogDir(assetsDir).setKeywordThreshold(1e-20f)
	                .getRecognizer();
	        recognizer.addListener(this);

	        // Create keyword-activation search.
	        recognizer.addKeyphraseSearch(KWS_SEARCH, KEYPHRASE);
	        // Create grammar-based searches.
	        File menuGrammar = new File(modelsDir, "grammar/menu.gram");
	        recognizer.addGrammarSearch(MENU_SEARCH, menuGrammar);
	        File digitsGrammar = new File(modelsDir, "grammar/digits.gram");
	        recognizer.addGrammarSearch(DIGITS_SEARCH, digitsGrammar);
	        // Create language model search.
	        File languageModel = new File(modelsDir, "lm/weather.dmp");
	        recognizer.addNgramSearch(FORECAST_SEARCH, languageModel);
	    }
	   
	   private void switchSearch(String searchName) {
	        recognizer.stop();
	        recognizer.startListening(searchName);
	        String caption = Config.context.getResources().getString(captions.get(searchName));
	        ((TextView) findViewById(R.id.caption_text)).setText(caption);
	    }
	
	@Override
	public void onBeginningOfSpeech() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onEndOfSpeech() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onPartialResult(Hypothesis arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onResult(Hypothesis arg0) {
		// TODO Auto-generated method stub
		
	}

}
